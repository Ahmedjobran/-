#include <iostream>
#include <ctime>
#include <conio.h>
#include <windows.h>
using namespace std;
enum Direction
{
    Top =1,
    Down,
    Right,
    Left,
    lo,
    no
};
struct map
{
    int width, hitghe, frotx, froty, frot_x[10], frot_y[10];
};
struct snake
{
    int HeadX, HeadY, teel_n = 0, teel_x[300], teel_y[300];
    Direction Dir;
};
struct player
{
    bool lose = false;
    int score;
};
map map1;
snake snake1;
player player1;
void shift_Right(int arr[], int size)
{
    for (int i = size - 2; i >= 0; i--)
        arr[i + 1] = arr[i];
}

void generot()
{
    srand(time(NULL));
    map1.frotx = rand() % (map1.width - 2) + 1;
    map1.froty = rand() % (map1.hitghe - 2) + 1;
}
void setup()
{
    map1.width = 65;
    map1.hitghe = 35;
    generot();
    snake1.HeadX = map1.width / 2;
    snake1.HeadY = map1.hitghe / 2;
    snake1.teel_n = 0;
    player1.lose = false;
    player1.score = 0;
}
void Draw()
{
    system("cls");
    for (int i = 0; i < map1.hitghe; i++)
    {
        for (int j = 0; j < map1.width; j++)
        {
            if (i == 0 || i == map1.hitghe - 1)
                cout << ".";
            else if (j == 0 || j == map1.width - 1)
                cout << ".";
            else if (i == snake1.HeadY && j == snake1.HeadX)
                cout << "Â©";
            else if (i == map1.froty && j == map1.frotx)
            {
                cout << "$";
            }
           
            else
            {
                bool pranted = false;
                for (int z = 0; z < snake1.teel_n; z++)
                {
                    if (snake1.teel_x[z] == j && snake1.teel_y[z] == i)
                    {
                        cout << "+";
                        pranted = true;
                        break;
                    }
                }

                if (!pranted)
                    cout << " ";
            }
        }
        cout << endl;
    }

    cout << "player1.score :" << player1.score << endl;
}
void inpute()
{
    if (_kbhit())
    {
        char c = _getch();
        switch (c)
        {
        case '2':
            snake1.Dir = Top;
            break;
        case '8':
            snake1.Dir = Down;
            break;
        case '6':
            snake1.Dir= Right;
            break;
        case '4':
            snake1.Dir = Left;
            break;
            case 'l' : snake1.Dir = lo;break;
            case 'o' : snake1.Dir = no;break;
        case 'x':
            exit(0);
        }
    }
}
void border()
{
    if (snake1.HeadY == map1.hitghe)
    {
        snake1.HeadY = 0;
    }
    else if (snake1.HeadY == 0)
    {
        snake1.HeadY = map1.hitghe;
    }
    else if (snake1.HeadX == map1.width)
    {
        snake1.HeadX = 0;
    }
    else if (snake1.HeadX == 0)
    {
        snake1.HeadX = map1.width;
    }
}
void move()
{
    shift_Right(snake1.teel_x, 300);
    shift_Right(snake1.teel_y, 300);
    snake1.teel_x[0] = snake1.HeadX;
    snake1.teel_y[0] = snake1.HeadY;
    switch (snake1.Dir)
    {
    case Top:
        snake1.HeadY--;
        break;
    case Down:
        snake1.HeadY++;
        break;
    case Right:
        snake1.HeadX++;
        break;
    case Left:
        snake1.HeadX--;
        break;
        case lo : snake1.teel_n ++;break;
        case no : snake1.HeadX = rand() % (map1.width-2)+1;break;
    }
    if (snake1.HeadY >= map1.hitghe || snake1.HeadY <= 0 || snake1.HeadX >= map1.width || snake1.HeadX <= 0)
        player1.lose = true;
    if (snake1.HeadX == map1.frotx && snake1.HeadY == map1.froty)
    {
        generot();
        player1.score += 1;
        snake1.teel_n++;
        cout << snake1.teel_n;
    }
    
}
int main()
{
    setup();
    while (!player1.lose)
    {
        Draw();
        inpute();
        move();
        border();
        Sleep(100);
    }
    system("pauos");
    return 0;
}
